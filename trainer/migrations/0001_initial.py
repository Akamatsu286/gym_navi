# Generated by Django 2.2.10 on 2020-05-21 00:37

from django.db import migrations, models
import trainer.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Trainer',
            fields=[
                ('id', models.AutoField(auto_created=True,
                                        primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(
                    max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(
                    blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False,
                                                     help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=100, verbose_name='姓')),
                ('last_name', models.CharField(max_length=100, verbose_name='名')),
                ('first_read', models.CharField(max_length=100, verbose_name='セイ')),
                ('last_read', models.CharField(max_length=100, verbose_name='メイ')),
                ('gender', models.CharField(blank=True, choices=[
                 (1, '男性'), (2, '女性')], max_length=100, null=True, verbose_name='性別')),
                ('email', models.EmailField(max_length=254,
                                            unique=True, verbose_name='メールアドレス')),
                ('phone', models.CharField(max_length=15, verbose_name='電話番号')),
                ('birth_date', models.DateField(
                    blank=True, null=True, verbose_name='生年月日')),
                ('image', models.ImageField(upload_to='images', verbose_name='画像')),
                ('area', models.CharField(max_length=100)),
                ('is_staff', models.BooleanField(default=False,
                                                 help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(
                    default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.',
                                                  related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.',
                                                            related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', trainer.models.CustomUserManager()),
            ],
        ),
    ]
